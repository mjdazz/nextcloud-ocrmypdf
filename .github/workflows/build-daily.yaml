name: build-docker-image
on:
  schedule:
    - cron: "0 2 * * *"
jobs:
  get-latest-tag:
    runs-on: ubuntu-latest
    outputs:
      nextcloud-version: ${{ steps.nc-tag.outputs.nc-version }}
      nextcloud-ocrmypdf-version: ${{ steps.nc-ocrmypdf-tag.outputs.nc-ocrmypdf-version }}
    steps:
      - name: Get Latest Nextcloud Tag
        id: nc-tag
        run: |
          apt update && apt install jq curl -y
          VERSION=$(curl https://registry.hub.docker.com/v1/repositories/nextcloud/tags | jq '.[].name' --raw-output | egrep "^[0-9]+\.[0-9]+\.[0-9]+$" |  sort --version-sort | tail -n 1)
          echo "::set-output name=nc-version::${VERSION}"
      - name: Get Latest nextcloud-ocrmypdf Tag
        id: nc-ocrmypdf-tag
        run: |
          apt update && apt install jq curl -y
          VERSION=$(curl https://registry.hub.docker.com/v1/repositories/mjdazz/nextcloud-ocrmypdf/tags | jq '.[].name' --raw-output | egrep "^[0-9]+\.[0-9]+\.[0-9]+$" |  sort --version-sort | tail -n 1)
          echo "::set-output name=nc-ocrmypdf-version::${VERSION}"

  build-images:
    runs-on: ubuntu-latest
    needs: get-latest-tag
    if: needs.get-latest-tag.outputs.nextcloud-version != needs.get-latest-tag.outputs.nextcloud-ocrmypdf-version
    strategy:
      matrix:
        version: ["${{ needs.get-latest-tag.outputs.nextcloud-version }}",
                  "${{ needs.get-latest-tag.outputs.nextcloud-version }}-apache",
                  "${{ needs.get-latest-tag.outputs.nextcloud-version }}-fpm"
                  ]
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: mjdazz/nextcloud-ocrmypdf:${{ matrix.version }}
          build-args: |
            VERSION=${{ matrix.version }}
